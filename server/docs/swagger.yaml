definitions:
  types.Game:
    properties:
      current_player:
        type: string
      dices:
        items:
          type: integer
        type: array
      double_owner:
        type: string
      double_value:
        description: Current value of the red dice
        type: integer
      elo1:
        type: integer
      elo2:
        type: integer
      end:
        type: string
      id:
        type: integer
      p1checkers:
        description: arr[0] is bar
        items:
          type: integer
        type: array
      p2checkers:
        description: arr[0] is bar
        items:
          type: integer
        type: array
      player1:
        type: integer
      player2:
        type: integer
      start:
        type: string
      status:
        type: string
      want_to_double:
        type: boolean
    type: object
  types.Move:
    properties:
      from:
        example: 2
        type: integer
      to:
        example: 1
        type: integer
    type: object
  types.PossibleMoves:
    properties:
      dice:
        example:
        - 1
        - 2
        items:
          type: integer
        type: array
      moves:
        items:
          $ref: '#/definitions/types.Move'
        type: array
    type: object
info:
  contact: {}
paths:
  /play:
    delete:
      consumes:
      - application/json
      description: Surrend to current game
      produces:
      - application/json
      responses:
        "201":
          description: Surrended
        "404":
          description: Not in a game
      summary: Surrend to current game
      tags:
      - play
    get:
      consumes:
      - application/json
      description: Get current game
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Game'
        "404":
          description: Game not found
      summary: Get current game
      tags:
      - play
  /play/double:
    delete:
      consumes:
      - application/json
      description: Refuse the double
      produces:
      - application/json
      responses:
        "201":
          description: Double refused
        "400":
          description: Not in a game or can't refuse double
      summary: Refuse the double
      tags:
      - play
    post:
      consumes:
      - application/json
      description: The player want to double
      produces:
      - application/json
      responses:
        "201":
          description: Value of the red dice after the double
          schema:
            type: integer
        "400":
          description: Not in a game or double not possible
      summary: The player want to double
      tags:
      - play
    put:
      consumes:
      - application/json
      description: Accept the double
      produces:
      - application/json
      responses:
        "201":
          description: Double accepted
        "400":
          description: Not in a game or double not possible
      summary: Accept the double
      tags:
      - play
  /play/moves:
    get:
      consumes:
      - application/json
      description: Get possible moves for next turn
      produces:
      - application/json
      responses:
        "200":
          description: Dice with all possible moves
          schema:
            $ref: '#/definitions/types.PossibleMoves'
        "400":
          description: Not in a game, not your turn or double requested
      summary: Get possible moves for next turn
      tags:
      - play
    post:
      consumes:
      - application/json
      description: Play all the moves for the current turn
      parameters:
      - description: Moves to play
        in: body
        name: request
        required: true
        schema:
          items:
            $ref: '#/definitions/types.Move'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Moves played
        "400":
          description: Moves not legal, not your turn or not in a game
      summary: Play all the moves for the current turn
      tags:
      - play
  /play/search:
    delete:
      consumes:
      - application/json
      description: Stop a running matchmaking search
      produces:
      - application/json
      responses:
        "204":
          description: Search stopped
        "400":
          description: Not searching
      summary: Stop a running matchmaking search
      tags:
      - play
    get:
      consumes:
      - application/json
      description: Start a matchmaking search for a new game
      produces:
      - application/json
      responses:
        "201":
          description: Search started
        "400":
          description: Already searching or in a game
      summary: Start a matchmaking search for a new game
      tags:
      - play
swagger: "2.0"
